document.addEventListener('DOMContentLoaded', async () => {
    await fetchExercises();
    document.getElementById('workoutPlanForm').addEventListener('submit', saveWorkoutPlan);
    document.getElementById('addExerciseButton').addEventListener('click', addExercise);
});

async function fetchExercises() {
    try {
        const response = await fetch('/api/exercises');
        const data = await response.json();
        populateExerciseDropdown(data);
    } catch (error) {
        console.error('Error fetching exercises:', error);
    }
}

function populateExerciseDropdown(exercises) {
    const exerciseDropdown = document.getElementById('exerciseDropdown');
    exercises.forEach(exercise => {
        const option = document.createElement('option');
        option.value = exercise.id; // Use the exercise ID as the value
        option.textContent = exercise.exercise_name;
        exerciseDropdown.appendChild(option);
    });
}

function addExercise() {
    const exerciseList = document.getElementById('exerciseList');
    const exerciseDiv = document.createElement('div');
    exerciseDiv.classList.add('exercise-item');

    const exerciseDropdown = document.createElement('select');
    exerciseDropdown.classList.add('exercise-dropdown');
    const defaultOption = document.createElement('option');
    defaultOption.value = '';
    defaultOption.textContent = 'Select Exercise';
    exerciseDropdown.appendChild(defaultOption);

    // Populate the dropdown with exercises
    const exerciseOptions = document.getElementById('exerciseDropdown').options;
    for (let i = 0; i < exerciseOptions.length; i++) {
        const option = document.createElement('option');
        option.value = exerciseOptions[i].value;
        option.textContent = exerciseOptions[i].textContent;
        exerciseDropdown.appendChild(option);
    }

    exerciseDiv.appendChild(exerciseDropdown);

    const setsInput = document.createElement('input');
    setsInput.type = 'number';
    setsInput.placeholder = 'Sets';
    setsInput.min = 1;
    exerciseDiv.appendChild(setsInput);

    const repsInput = document.createElement('input');
    repsInput.type = 'number';
    repsInput.placeholder = 'Reps';
    repsInput.min = 1;
    exerciseDiv.appendChild(repsInput);

    exerciseList.appendChild(exerciseDiv);
}

async function saveWorkoutPlan(event) {
    event.preventDefault();
    const planName = document.getElementById('planName').value;
    const exerciseItems = document.querySelectorAll('.exercise-item');

    const exercises = Array.from(exerciseItems).map(item => {
        const dropdown = item.querySelector('select.exercise-dropdown');
        const selectedOption = dropdown.options[dropdown.selectedIndex];
        const exerciseId = selectedOption.value;
        const name = selectedOption.textContent;
        const sets = item.querySelector('input[placeholder="Sets"]').value;
        const reps = item.querySelector('input[placeholder="Reps"]').value;
        return { id: exerciseId, name, sets, reps };
    });

    try {
        const response = await fetch('/api/workoutPlans', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ name: planName, exercises }),
        });

        if (response.ok) {
            alert('Workout plan saved successfully!');
        } else {
            const errorData = await response.json();
            alert(`Error: ${errorData.error}`);
        }
    } catch (error) {
        console.error('Error saving workout plan:', error);
        alert('Error saving workout plan. Please try again.');
    }
}
document.addEventListener('DOMContentLoaded', () => {
    fetchExercises();
});

async function fetchExercises() {
    try {
        const response = await fetch('/api/exercises');
        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }
        const data = await response.json();
        displayExercises(data);
    } catch (error) {
        console.error('Error fetching exercises:', error);
        alert('An error occurred while fetching exercises. Please try again later.');
    }
}

function displayExercises(data) {
    const exerciseList = document.getElementById('exerciseList');
    exerciseList.innerHTML = ''; // Clear existing content
    const muscleGroups = {};

    data.forEach(item => {
        if (!muscleGroups[item.muscle_group]) {
            muscleGroups[item.muscle_group] = [];
        }
        muscleGroups[item.muscle_group].push({ id: item.id, name: item.exercise_name });
    });

    for (const [muscleGroup, exercises] of Object.entries(muscleGroups)) {
        const groupDiv = document.createElement('div');
        const groupTitle = document.createElement('h2');
        groupTitle.textContent = muscleGroup;
        groupTitle.classList.add('muscle-group');
        groupTitle.addEventListener('click', () => {
            fetchExercisesByMuscleGroup(muscleGroup);
        });
        groupDiv.appendChild(groupTitle);

        const exerciseListElement = document.createElement('ul');
        exercises.forEach(exercise => {
            const exerciseItem = document.createElement('li');
            exerciseItem.textContent = exercise.name;
            exerciseItem.addEventListener('click', () => {
                fetchExerciseDetails(exercise.id);
            });
            exerciseListElement.appendChild(exerciseItem);
        });

        groupDiv.appendChild(exerciseListElement);
        exerciseList.appendChild(groupDiv);
    }
}

// async function fetchExercisesByMuscleGroup(muscleGroup) {
//     try {
//         const response = await fetch(`/api/exercises/muscleGroup/${muscleGroup}`);
//         if (!response.ok) {
//             throw new Error(`HTTP error! Status: ${response.status}`);
//         }
//         const data = await response.json();
//         displayExerciseDetails(data);
//     } catch (error) {
//         console.error('Error fetching exercises by muscle group:', error);
//         alert('An error occurred while fetching exercises. Please try again later.');
//     }
// }

async function fetchExerciseDetails(exerciseId) {
    try {
        const response = await fetch(`/api/exercises/details?exerciseId=${exerciseId}`);
        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }
        const data = await response.json();
        displayExerciseDetails(data);
    } catch (error) {
        console.error('Error fetching exercise details:', error);
        alert('An error occurred while fetching exercise details. Please try again later.');
    }
}

function displayExerciseDetails(data) {
    const exerciseDetails = document.getElementById('exerciseDetails');
    exerciseDetails.innerHTML = ''; // Clear existing content

    if (data.length === 0) return;

    const exerciseName = document.createElement('h3');
    exerciseName.textContent = data.exercise_name;
    exerciseDetails.appendChild(exerciseName);

    const description = document.createElement('p');
    description.textContent = data.description;
    exerciseDetails.appendChild(description);

    const steps = document.createElement('ul');
    data.steps.forEach(step => {
        const stepItem = document.createElement('li');
        stepItem.textContent = step;
        steps.appendChild(stepItem);
    });

    exerciseDetails.appendChild(steps);
}
async function fetchExercises() {
    try {
        const response = await fetch('/api/exercises');
        const data = await response.json();
        displayExercises(data);
    } catch (error) {
        console.error('Error fetching exercises:', error);
    }
}

function displayExercises(data) {
    const exerciseList = document.getElementById('exerciseList');
    exerciseList.innerHTML = ''; // Clear existing content
    const muscleGroups = {};

    data.forEach(item => {
        if (!muscleGroups[item.muscle_group]) {
            muscleGroups[item.muscle_group] = [];
        }
        muscleGroups[item.muscle_group].push({ id: item.id, name: item.exercise_name });
    });

    for (const [muscleGroup, exercises] of Object.entries(muscleGroups)) {
        const groupDiv = document.createElement('div');
        const groupTitle = document.createElement('h2');
        groupTitle.textContent = muscleGroup;
        groupDiv.appendChild(groupTitle);

        const exerciseListElement = document.createElement('ul');
        exercises.forEach(exercise => {
            const exerciseItem = document.createElement('li');
            exerciseItem.textContent = exercise.name;
            exerciseItem.addEventListener('click', () => {
                fetchExerciseDetails(exercise.id);
            });
            exerciseListElement.appendChild(exerciseItem);
        });

        groupDiv.appendChild(exerciseListElement);
        exerciseList.appendChild(groupDiv);
    }
}

async function fetchExerciseDetails(exerciseId) {
    try {
        const response = await fetch(`/api/exercises/details/${exerciseId}`);
        const data = await response.json();
        displayExerciseDetails(data);
    } catch (error) {
        console.error('Error fetching exercise details:', error);
    }
}

function displayExerciseDetails(data) {
    const exerciseDetails = document.getElementById('exerciseDetails');
    exerciseDetails.innerHTML = ''; // Clear existing content

    if (data.length === 0) return;

    const exerciseName = document.createElement('h3');
    exerciseName.textContent = data[0].exercise_name;
    exerciseDetails.appendChild(exerciseName);

    const description = document.createElement('p');
    description.textContent = data[0].description;
    exerciseDetails.appendChild(description);

    const steps = document.createElement('ul');
    data.forEach(item => {
        const stepItem = document.createElement('li');
        stepItem.textContent = item.step_text;
        steps.appendChild(stepItem);
    });

    exerciseDetails.appendChild(steps);
}

fetchExercises();
document.addEventListener('DOMContentLoaded', () => {
    const muscleGroup = getMuscleGroupFromURL();
    if (muscleGroup) {
        fetchExercisesByMuscleGroup(muscleGroup);
    }
});

function getMuscleGroupFromURL() {
    const url = window.location.href;
    const pageMap = {
        'biceps.html': 'Biceps',
        'triceps.html': 'Triceps',
        'chest.html': 'Chest',
        'back.html': 'Back'
    };

    for (const [page, muscleGroup] of Object.entries(pageMap)) {
        if (url.includes(page)) {
            return muscleGroup;
        }
    }
    return null;
}

async function fetchExercisesByMuscleGroup(muscleGroup) {
    try {
        const response = await fetch(`/api/exercises/muscleGroup/${muscleGroup}`);
        const data = await response.json();
        displayMuscleGroupDetails(data, muscleGroup);
    } catch (error) {
        console.error('Error fetching exercises by muscle group:', error);
    }
}

function displayMuscleGroupDetails(data, muscleGroup) {
    const exerciseDetails = document.getElementById('exerciseDetails');
    exerciseDetails.innerHTML = `<h2>${muscleGroup}</h2>`; // Clear existing content and add title

    data.forEach(exercise => {
        const exerciseItem = document.createElement('div');
        exerciseItem.classList.add('exercise-detail-item');

        const exerciseTitle = document.createElement('h3');
        exerciseTitle.textContent = exercise.name;
        exerciseItem.appendChild(exerciseTitle);

        const exerciseDescription = document.createElement('p');
        exerciseDescription.textContent = exercise.description;
        exerciseItem.appendChild(exerciseDescription);

        const stepsList = document.createElement('ul');
        exercise.steps.forEach(step => {
            const stepItem = document.createElement('li');
            stepItem.textContent = step;
            stepsList.appendChild(stepItem);
        });
        exerciseItem.appendChild(stepsList);

        exerciseDetails.appendChild(exerciseItem);
    });
}
document.addEventListener('DOMContentLoaded', async () => {
    await fetchWorkoutPlans();
});

async function fetchWorkoutPlans() {
    try {
        const response = await fetch('/api/workoutPlans');
        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }
        const data = await response.json();
        displayWorkoutPlans(data);
    } catch (error) {
        console.error('Error fetching workout plans:', error);
    }
}

function displayWorkoutPlans(plans) {
    const plansContainer = document.getElementById('plansContainer');
    plansContainer.innerHTML = ''; // Clear any existing content

    plans.forEach(plan => {
        const planDiv = document.createElement('div');
        planDiv.classList.add('plan');

        // Displaying the plan name
        const planName = document.createElement('h3');
        planName.textContent = plan.name; // Plan name
        planDiv.appendChild(planName);

        const exerciseList = document.createElement('ul');

        plan.exercises.forEach(exercise => {
            const exerciseItem = document.createElement('li');

            // Check if the exercise object has a name property
            if (exercise.name) {
                exerciseItem.textContent = `${exercise.name} - Sets: ${exercise.sets}, Reps: ${exercise.reps}`; // Exercise name and details
            } else {
                exerciseItem.textContent = `Exercise ID ${exercise.id} - Sets: ${exercise.sets}, Reps: ${exercise.reps}`; // Fallback if name is missing
            }

            exerciseItem.setAttribute('data-exercise-id', exercise.id);

            const deleteButton = document.createElement('button');
            deleteButton.textContent = 'Delete';
            deleteButton.addEventListener('click', () => {
                deleteExerciseFromPlan(plan.id, exercise.id);
            });

            const editButton = document.createElement('button');
            editButton.textContent = 'Edit';
            editButton.addEventListener('click', () => editExerciseInPlan(plan.id, exercise.id, exercise.sets, exercise.reps));

            exerciseItem.appendChild(deleteButton);
            exerciseItem.appendChild(editButton);
            exerciseList.appendChild(exerciseItem);
        });

        planDiv.appendChild(exerciseList);
        plansContainer.appendChild(planDiv);
    });
}

function deleteExerciseFromPlan(planId, exerciseId) {
    fetch(`/api/workoutPlans/${planId}/exercises/${exerciseId}`, {
        method: 'DELETE'
    })
        .then(response => response.json())
        .then(data => {
            fetchWorkoutPlans(); // Refresh the plan list
        })
        .catch(error => {
            console.error('Error deleting exercise:', error);
        });
}

function editExerciseInPlan(planId, exerciseId, sets, reps) {
    const newSets = prompt('Enter new sets:', sets);
    const newReps = prompt('Enter new reps:', reps);
    if (newSets !== null && newReps !== null) {
        updateExerciseInPlan(planId, exerciseId, newSets, newReps);
    }
}

function updateExerciseInPlan(planId, exerciseId, sets, reps) {
    fetch(`/api/workoutPlans/${planId}/exercises/${exerciseId}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ sets, reps })
    })
        .then(response => response.json())
        .then(data => {
            fetchWorkoutPlans(); // Refresh the plan list
        })
        .catch(error => {
            console.error('Error updating exercise:', error);
        });
}
